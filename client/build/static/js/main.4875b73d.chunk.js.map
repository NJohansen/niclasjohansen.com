{"version":3,"sources":["assets/images/shape.svg","serviceWorker.js","components/Section/Section.js","components/Terminal/Terminal.js","views/Frontpage/Frontpage.js","views/Portfolio/Portfolio.js","components/Post/index.js","components/Post/Post.js","views/Blog/Blog.js","views/About/About.js","components/Logo/index.js","components/Logo/Logo.js","components/Header/Header.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Section_Section","_ref","headertext","half","react_default","a","createElement","className","style","width","height","src","shape","alt","Terminal_Terminal","Frontpage","id","Component","Portfolio","description","Post","header","text","this","fetchPosts","nextProps","props","setState","fetch","concat","path","toLowerCase","res","post","parsePost","_doc$split","doc","split","_doc$split2","Object","toArray","rawHeader","body","slice","item","_item$split","_item$split2","key","value","camelcase","trim","join","_ref2","class","renderHeader","__postHeader","renderContent","title","_ref3","background","coverColor","Blog","components_Post","About","Logo","link","renderMenuItem","name","pathname","includes","react_router_dom","to","activeClassName","Header_Header","components_Logo","href","type","App","react_router","exact","component","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4875b73d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shape.05bf3c0a.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './Section.css';\nimport React from 'react';\nimport shape from '../../assets/images/shape.svg';\n\nexport default ({ headertext, half}) => (\n    <div className='splashContainer'>\n      <div className='imageWidget version2'>\n        <div className='headerImage'>\n          <div style={{width:'850px', height:'850px'}}>\n           <img className='headerImg' src={shape} alt='text'></img>\n          </div>\n        </div>\n      </div>\n      <div className='imageWidget'>\n        <div className='headerImage'>\n          <div style={{width:'850px', height:'850px'}}>\n           <img className='headerImg' src={shape} alt='text'></img>\n          </div>\n        </div>\n      </div>\n      <div className='splashHeader'>\n        <h1>{headertext}</h1>\n      </div>\n      <div className=\"splashDescription\"></div>\n    </div>\n)\n","import './Terminal.css';\nimport React from 'react';\n\nexport default () => (\n  <div className='terminalContainer'>\n    <div className='editor'>\n      <div className='terminalHeader'>\n        <div className='buttonGroup'>\n          <span className='terminalButton close'></span>\n          <span className='terminalButton minimize'></span>\n          <span className='terminalButton maximize'></span>\n        </div>\n      </div>\n      <div className='terminalContent'>\n        <div className='terminalCode'>\n          <pre>\n            <div className=\"codeComment\"># Run welcome script</div>\n            <div>node welcome.js</div>\n            <div className=\"codeComment\"># Install Dataform CLI</div>\n            <div>npm i -g @dataform/cli</div>\n            <div className=\"codeComment\"># Install Dataform CLI</div>\n            <div>npm i -g @dataform/cli</div>\n            <div className=\"codeComment\"># Install Dataform CLI</div>\n            <div>npm i -g @dataform/cli</div>\n          </pre>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n","import React, { Component } from 'react';\nimport './Frontpage.css';\nimport Section from '../../components/Section/Section';\nimport Terminal from '../../components/Terminal/Terminal';\n\n\nclass Frontpage extends Component {\n  render() {\n    return (\n      <div id='root'>\n        <main className='main'>\n        <Section headertext=\"Welcome!\"/> \n        <div className=\"splashDescription\"><Terminal/></div>\n        </main>\n        </div>\n    );\n  }\n}\n\nexport default Frontpage;\n","import React, { Component } from 'react';\nimport './Portfolio.css';\nimport Section from '../../components/Section/Section';\n\n\nclass Portfolio extends Component {\n  render() {\n    return (\n      <div id='root'>\n        <main className='main'>\n          <Section headertext=\"Portfolio\" description=\"test\"/>\n        </main>\n        </div>\n    );\n  }\n}\n\nexport default Portfolio;\n","import Post from './Post'\nexport default Post\n","import React, { Component } from 'react';\nimport './Post.css';\nimport camelcase from 'camelcase';\n\nexport default class Post extends Component{\n    state = {\n        header: {},\n        text: ''\n    }\n\n    componentDidMount(){\n        this.fetchPosts()\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.props = nextProps\n        this.fetchPosts()\n    }\n\n    async fetchPosts(){\n        this.setState({header: {}, text: ''})\n        const res = await fetch(`/static/posts/${this.props.path.toLowerCase()}.md`)\n        const post = await res.text;\n        this.parsePost(post)\n    }\n\n    parsePost(post){\n        const [_, rawHeader, ...body] = doc.split('---') //eslint-disable-line\n        const header = {};\n\n        for (const item in rawHeader.split('---')) {\n            const [key, ...value] = item.split(':')\n            header[camelcase(key).trim()] = value.join(':').trim()\n        }\n\n        this.setState({\n            header,\n            text: body.join('').trim()\n        })\n    }\n\n    render ({ path }, { header, text }) {\n        return (\n          <div class={`post ${text === '' ? 'loading' : ''}`}>\n            {this.renderHeader(window.__postHeader || header)}\n            {this.renderContent(text)}\n          </div>\n        )\n      }\n\n      renderHeader({title, description, coverColor}){\n        const style = {\n            background: coverColor,\n        }\n\n        if(!title){\n            return null\n        }\n\n        return(\n            <div>\n                <header style={style}>\n                    <section>\n                        <h1>{title}</h1>\n                        <h2 class='subject'>{description}</h2>\n                    </section>\n                </header>\n          </div>\n        )\n      }\n\n      renderContent (text) {\n        if (text === '') {\n          return <div class='loading'><i class='fas fa-circle-notch fa-spin' /></div>\n        }\n    \n        return (\n          <section class='text'>\n            <div>Test</div>\n          </section>\n        )\n      }\n}","import React, { Component } from 'react';\nimport './Blog.css';\nimport Section from '../../components/Section/Section';\nimport Post from '../../components/Post';\n\n\nexport default class Blog extends Component {\n  render() {\n    return (\n      <div id='root'>\n        <main className='main'>\n          <Section headertext=\"Blog\"/>\n          <Post path={`${this.props.post}`}/>\n        </main>\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './About.css';\nimport Section from '../../components/Section/Section';\n\n\nclass About extends Component {\n  render() {\n    return (\n      <div id='root'>\n        <main className='main'>\n          <Section headertext=\"About\" description=\"test\"/>\n        </main>\n        </div>\n    );\n  }\n}\n\nexport default About;\n","import Logo from './Logo'\nexport default Logo\n","import './Logo.css';\nimport React from 'react';\n\nexport default ({ link, width, height}) => (\n  <div className='logo'>\n    <img src=\"./logo.png\" alt=\"Logo\" height={height} width={width}></img>\n  </div>\n)\n","import React from 'react';\nimport './Header.css';\nimport Logo from '../../components/Logo';\nimport { NavLink } from 'react-router-dom'\n\nconst menu = [\n  ['/projects', 'Projects'],\n  ['/blog', 'Blog'],\n  ['/contact', 'Contact']\n];\n\nconst renderMenuItem = (path, name) => {\n  return (\n    <span className={window.location.pathname.includes(path) ? 'pages active' : 'pages'}>\n      <NavLink to={path} activeClassName='active'>{name}</NavLink>\n    </span>\n  )\n}\n\nconst renderActions = (path, name) => {\n  return (\n    <span className='actions'>\n      <a href={path}>\n        <button type='button' className='primaryButton'>{name}</button>\n      </a>\n    </span>\n  )\n}\n\n// WIP\n// eslint-disable-next-line \nconst renderMenu = () => {\n  for (const [page,name] in menu) {\n    renderMenuItem(page,name)\n    }\n}\n\nexport default () => (\n  <div className='navContainer'>\n    <div className='nav'>\n      <div className='navContent'>\n        <NavLink to=\"/\"><Logo height=\"70\" /></NavLink>\n        <div className='navPages'>\n          {renderMenuItem('/portfolio', 'Portfolio')}\n          {renderMenuItem('/blog', 'Blog')}\n          {renderMenuItem('/about', 'About me')}\n        </div>\n        <span className='infoText'><a href='mailto:nj@morningtrain.dk'>nj@morningtrain.dk</a></span>\n        {renderActions('/projects', 'Kontakt')}\n      </div>\n    </div>\n  </div>\n)\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Frontpage from './views/Frontpage/Frontpage';\nimport Portfolio from './views/Portfolio/Portfolio';\nimport Blog from './views/Blog/Blog';\nimport About from './views/About/About';\nimport Header from './components/Header/Header';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"app\">\n          <Header/>\n          <Switch>\n            <Route exact path=\"/\" component={Frontpage}/>\n            <Route path=\"/portfolio\" component={Portfolio}/>\n            <Route path=\"/blog\" component={Blog}/>\n            <Route path=\"/about\" component={About}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n    <App />\n), document.getElementById('next'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}